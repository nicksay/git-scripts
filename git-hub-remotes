#!/bin/bash


set -e  # stop on error


SCRIPTS="$(dirname "$0")"


remote_master_name=$(git config --get branch.master.remote || echo)
remote_master_url=$(git remote get-url "$remote_master_name" 2>/dev/null || echo)
if [[ ! "$remote_master_url" ]]; then
  echo >&2 "Error: no remote found for the master branch"
  exit 1
fi
fork="$remote_master_name"
fork_url="$remote_master_url"
upstream="$remote_master_name"
upstream_url="$remote_master_url"


remote_origin_url=$(git remote get-url "origin" 2>/dev/null || echo)
remote_upstream_url=$(git remote get-url "upstream" 2>/dev/null || echo)
if [[ "$remote_origin_url" && "$remote_upstream_url" ]]; then
  fork="origin"
  fork_url="$remote_origin_url"
  upstream="upstream"
  upstream_url="$remote_upstream_url"
else
  hub_user=$("$SCRIPTS"/git-hub-user)
  if [[ ! "$hub_user" ]]; then
   echo >&2 "Error: github.com username is required"
   exit 1
  fi
  remote_username_url=$(git remote get-url "$hub_user" 2>/dev/null || echo)
  if [[ "$remote_username_url" && "$remote_origin_url" ]]; then
    fork="$hub_user"
    fork_url="$remote_username_url"
    upstream="origin"
    upstream_url="$remote_origin_url"
  elif [[ "$remote_username_url" && "$remote_upstream_url" ]]; then
    fork="$hub_user"
    fork_url="$remote_username_url"
    upstream="upstream"
    upstream_url="$remote_upstream_url"
  fi
fi

printf "fork:\t$fork\t$fork_url\n"
printf "upstream:\t$upstream\t$upstream_url\n"
